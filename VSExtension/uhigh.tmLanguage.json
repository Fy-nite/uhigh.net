{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Î¼High",
  "scopeName": "source.uhigh",
  "fileTypes": [
    "uh"
  ],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#attributes"
    },
    {
      "include": "#types"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#classes"
    },
    {
      "include": "#namespaces"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.uhigh",
          "begin": "//",
          "end": "$",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.uhigh"
            }
          }
        },
        {
          "name": "comment.block.uhigh",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.uhigh"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.uhigh",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.uhigh",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.uhigh",
          "match": "\\b\\d+\\.\\d+\\b"
        },
        {
          "name": "constant.numeric.integer.uhigh",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.uhigh",
          "match": "\\b(if|else|while|for|in|break|continue|return|try|catch|throw)\\b"
        },
        {
          "name": "keyword.declaration.uhigh",
          "match": "\\b(var|const|func|field|class|namespace|import|from)\\b"
        },
        {
          "name": "keyword.modifier.uhigh",
          "match": "\\b(public|private|protected|internal|static|abstract|virtual|override|sealed|readonly|async|await)\\b"
        },
        {
          "name": "keyword.other.uhigh",
          "match": "\\b(this|new|include|asm|range)\\b"
        },
        {
          "name": "constant.language.boolean.uhigh",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "attributes": {
      "patterns": [
        {
          "name": "meta.attribute.uhigh",
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "name": "entity.name.type.attribute.uhigh",
              "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
            },
            {
              "include": "#strings"
            },
            {
              "include": "#numbers"
            }
          ]
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.primitive.uhigh",
          "match": "\\b(int|float|string|bool)\\b"
        },
        {
          "name": "entity.name.type.uhigh",
          "match": "\\b[A-Z][A-Za-z0-9_]*\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "meta.function.declaration.uhigh",
          "begin": "\\b(func)\\s+([A-Za-z_][A-Za-z0-9_]*(?:\\.[A-Za-z_][A-Za-z0-9_]*)*)\\s*\\(",
          "beginCaptures": {
            "1": {
              "name": "keyword.declaration.uhigh"
            },
            "2": {
              "name": "entity.name.function.uhigh"
            }
          },
          "end": "\\)",
          "patterns": [
            {
              "include": "#parameters"
            }
          ]
        },
        {
          "name": "meta.function.call.uhigh",
          "begin": "\\b([A-Za-z_][A-Za-z0-9_]*(?:\\.[A-Za-z_][A-Za-z0-9_]*)*)\\s*\\(",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.uhigh"
            }
          },
          "end": "\\)",
          "patterns": [
            {
              "include": "#expressions"
            }
          ]
        }
      ]
    },
    "classes": {
      "patterns": [
        {
          "name": "meta.class.declaration.uhigh",
          "begin": "\\b(class)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
          "beginCaptures": {
            "1": {
              "name": "keyword.declaration.uhigh"
            },
            "2": {
              "name": "entity.name.type.class.uhigh"
            }
          },
          "end": "(?=\\{)",
          "patterns": [
            {
              "name": "keyword.operator.inheritance.uhigh",
              "match": ":"
            },
            {
              "name": "entity.name.type.base.uhigh",
              "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
            }
          ]
        }
      ]
    },
    "namespaces": {
      "patterns": [
        {
          "name": "meta.namespace.declaration.uhigh",
          "begin": "\\b(namespace)\\s+([A-Za-z_][A-Za-z0-9_]*(?:\\.[A-Za-z_][A-Za-z0-9_]*)*)\\b",
          "beginCaptures": {
            "1": {
              "name": "keyword.declaration.uhigh"
            },
            "2": {
              "name": "entity.name.namespace.uhigh"
            }
          },
          "end": "(?=\\{)"
        }
      ]
    },
    "parameters": {
      "patterns": [
        {
          "name": "meta.parameter.uhigh",
          "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\s*(?::\\s*([A-Za-z_][A-Za-z0-9_]*))?",
          "captures": {
            "1": {
              "name": "variable.parameter.uhigh"
            },
            "2": {
              "name": "storage.type.uhigh"
            }
          }
        },
        {
          "include": "#expressions"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.uhigh",
          "match": "=|\\+=|-=|\\*=|/="
        },
        {
          "name": "keyword.operator.comparison.uhigh",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.logical.uhigh",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.arithmetic.uhigh",
          "match": "\\+|-|\\*|/|%"
        },
        {
          "name": "keyword.operator.increment.uhigh",
          "match": "\\+\\+|--"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.section.braces.uhigh",
          "match": "[{}]"
        },
        {
          "name": "punctuation.section.brackets.uhigh",
          "match": "[\\[\\]]"
        },
        {
          "name": "punctuation.section.parens.uhigh",
          "match": "[()]"
        },
        {
          "name": "punctuation.separator.comma.uhigh",
          "match": ","
        },
        {
          "name": "punctuation.separator.semicolon.uhigh",
          "match": ";"
        },
        {
          "name": "punctuation.separator.colon.uhigh",
          "match": ":"
        },
        {
          "name": "punctuation.accessor.dot.uhigh",
          "match": "\\."
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.uhigh",
          "match": "\\b[a-z_][A-Za-z0-9_]*\\b"
        },
        {
          "name": "variable.other.constant.uhigh",
          "match": "\\b[A-Z_][A-Z0-9_]*\\b"
        }
      ]
    },
    "expressions": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#punctuation"
        },
        {
          "include": "#identifiers"
        }
      ]
    }
  }
}
