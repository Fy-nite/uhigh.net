{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Uhigh",
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#types"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.uhigh",
                    "match": "\\b(if|else|while|for|in|return|break|continue|match)\\b"
                },
                {
                    "name": "keyword.declaration.uhigh",
                    "match": "\\b(var|const|func|class|namespace|import|from|field|enum|interface|extension|record)\\b"
                },
                {
                    "name": "keyword.modifier.uhigh",
                    "match": "\\b(public|private|protected|internal|static|abstract|virtual|override|sealed|readonly|async|await)\\b"
                },
                {
                    "name": "keyword.other.uhigh",
                    "match": "\\b(this|new|try|catch|throw|include|sharp|range|get|set)\\b"
                },
                {
                    "name": "constant.language.uhigh",
                    "match": "\\b(true|false|null)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.uhigh",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.uhigh",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.uhigh",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.uhigh",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.uhigh",
                    "begin": "//",
                    "end": "$"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.decimal.uhigh",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment.uhigh",
                    "match": "(=|\\+=|-=|\\*=|/=)"
                },
                {
                    "name": "keyword.operator.comparison.uhigh",
                    "match": "(==|!=|<|>|<=|>=)"
                },
                {
                    "name": "keyword.operator.logical.uhigh",
                    "match": "(&&|\\|\\||!)"
                },
                {
                    "name": "keyword.operator.arithmetic.uhigh",
                    "match": "(\\+|-|\\*|/|%)"
                },
                {
                    "name": "keyword.operator.other.uhigh",
                    "match": "(\\.|::|\\?|\\?\\?|\\?\\.)"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.uhigh",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*\\()"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.primitive.uhigh",
                    "match": "\\b(int|float|string|bool|void)\\b"
                },
                {
                    "name": "entity.name.type.uhigh",
                    "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
                }
            ]
        }
    },
    "scopeName": "source.uhigh"
}
